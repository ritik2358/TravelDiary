{"version":3,"file":"static/js/551.e94f431b.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIelements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","user/pages/Auth.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        // console.log(event.target);\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files || event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile)\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid)\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type='file'\r\n                accept='.jpg,.png,.jpeg'\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n                    {!previewUrl && <p>Please pick an Image</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\r\n            </div>\r\n\r\n            {isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react'\r\n\r\nimport { validate } from '../../util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    // const [enteredValue, setEnteredValue] = useState('')\r\n    // const [isValid, setIsValid] = useState('false')\r\n\r\n    const changeHandler = event => {\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} />\r\n    )\r\n\r\n\r\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}> {props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className={`card ${props.className}`} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true\r\n            for (const inputId in state.inputs) {\r\n\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    })\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        })\r\n    }, [])\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, [])\r\n\r\n    return [formState, inputHandler, setFormData]\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState, useContext } from 'react'\r\nimport Card from '../../shared/components/UIelements/Card'\r\nimport Input from '../../shared/components/FormElements/Input'\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\r\nimport LoadingSpinner from '../../shared/components/UIelements/LoadingSpinner'\r\nimport ErrorModal from '../../shared/components/UIelements/ErrorModal'\r\nimport Button from '../../shared/components/FormElements/Button'\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\r\nimport { useForm } from '../../shared/hooks/form-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport './Auth.css'\r\n\r\n\r\n\r\nconst Auth = () => {\r\n\r\n    const auth = useContext(AuthContext)\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true)\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n    // const [error, setError] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined,\r\n                    image: undefined\r\n                }\r\n                , formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            )\r\n        } else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                },\r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, false)\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode)\r\n    }\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault()\r\n\r\n        console.log(formState.inputs);\r\n        // console.log(formState.inputs)\r\n\r\n        // setIsLoading(true);\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/login', 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    });\r\n                auth.login(responseData.userId, responseData.token);\r\n\r\n                // const responseData = await response.json();\r\n                // if (!response.ok) {\r\n                //     throw new Error(responseData.message);\r\n                // }\r\n                // console.log(responseData)\r\n                // setIsLoading(false);\r\n\r\n            } catch (err) {\r\n                //  console.log(err);\r\n                // setIsLoading(false);\r\n                // setError(err.message || 'Something went wrong, please try again')\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('email', formState.inputs.email.value)\r\n                formData.append('name', formState.inputs.name.value)\r\n                formData.append('password', formState.inputs.password.value)\r\n                formData.append('image', formState.inputs.image.value)\r\n                const responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + '/users/signup', 'POST',\r\n                    formData\r\n                    // JSON.stringify({\r\n                    //     name: formState.inputs.name.value,\r\n                    //     email: formState.inputs.email.value,\r\n                    //     password: formState.inputs.password.value\r\n                    // })\r\n\r\n                    // {\r\n                    //     'Content-Type': 'application/json'\r\n                    // }\r\n                );\r\n                // const responseData = await response.json();\r\n                // if (!response.ok) {\r\n                //     throw new Error(responseData.message);\r\n                // }\r\n                // console.log(responseData)\r\n                // setIsLoading(false);\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) {\r\n                //  console.log(err);\r\n                // setIsLoading(false);\r\n                // setError(err.message || 'Something went wrong, please try again')\r\n            }\r\n\r\n        }\r\n\r\n        // setIsLoading(false);\r\n\r\n        // auth.login()\r\n    }\r\n\r\n    // const errorHandler = () => {\r\n    //     setError(null);\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Your name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please Enter a Name\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    {!isLoginMode && (\r\n                        <ImageUpload\r\n                            center\r\n                            id=\"image\"\r\n                            onInput={inputHandler}\r\n                            errorText=\"Please provide an image\"\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"PLease Enter a Valid E-mail Address\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"PLease Enter a Valid Password (at least 6 Characters)\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid} > {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'} </Button>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Auth"],"names":["props","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","children","_jsx","id","ref","style","display","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","concat","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","_objectSpread","value","val","validate","validators","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","formReducer","formIsValid","inputId","inputs","_defineProperty","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","validator","trim","test","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","email","password","_useForm2","inputHandler","setFormData","authSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","preventDefault","console","log","process","JSON","stringify","sent","login","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","React","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}