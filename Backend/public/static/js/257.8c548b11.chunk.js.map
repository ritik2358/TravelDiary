{"version":3,"file":"static/js/257.8c548b11.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\r\n\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\r\nimport ErrorModal from '../../shared/components/UIelements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIelements/LoadingSpinner'\r\nimport Input from '../../shared/components/FormElements/Input'\r\nimport './NewPlace.css'\r\nimport Button from './../../shared/components/FormElements/Button';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './NewPlace.css'\r\nconst NewPlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [formState, inputHandler] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        address: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        }\r\n    }, false\r\n    );\r\n\r\n    const history = useHistory();\r\n\r\n    const placeSubmitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', formState.inputs.title.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('address', formState.inputs.address.value);\r\n            // formData.append('creator', auth.userId);\r\n            formData.append('image', formState.inputs.image.value);\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            // JSON.stringify({\r\n            //     title: formState.inputs.title.value,\r\n            //     description: formState.inputs.description.value,\r\n            //     address: formState.inputs.address.value,\r\n            //     creator: auth.userId\r\n            // }),\r\n            // { 'Content-Type': 'application/json' }\r\n            history.push('/');\r\n            // Redirect the user to a different page\r\n        } catch (err) {\r\n\r\n        }\r\n        // console.log(formState.inputs)\r\n    }\r\n    // const descriptionInputHandler = useCallback((id, value, isValid) => { }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id=\"title\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please Enter a Valid title\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    // type=\"text\" \r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please Enter a Valid Description (at least 5 characters)\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"address\"\r\n                    element=\"input\"\r\n                    // type=\"text\" \r\n                    label=\"Address\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please Enter a Valid Address\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <ImageUpload\r\n                    id=\"image\"\r\n                    onInput={inputHandler} errorText=\"Please provide an image\"\r\n                />\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    ADD PLACE\r\n                </Button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPlace","import React, { useRef, useState, useEffect } from 'react'\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        // console.log(event.target);\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files || event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile)\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid)\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type='file'\r\n                accept='.jpg,.png,.jpeg'\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n                    {!previewUrl && <p>Please pick an Image</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\r\n            </div>\r\n\r\n            {isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react'\r\n\r\nimport { validate } from '../../util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    // const [enteredValue, setEnteredValue] = useState('')\r\n    // const [isValid, setIsValid] = useState('false')\r\n\r\n    const changeHandler = event => {\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} />\r\n    )\r\n\r\n\r\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}> {props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n}\r\n\r\nexport default Input","import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true\r\n            for (const inputId in state.inputs) {\r\n\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    })\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        })\r\n    }, [])\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, [])\r\n\r\n    return [formState, inputHandler, setFormData]\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}