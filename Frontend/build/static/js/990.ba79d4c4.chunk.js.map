{"version":3,"file":"static/js/990.ba79d4c4.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIelements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useForm } from '../../shared/hooks/form-hook'\r\n\r\nimport './UpdatePlace.css'\r\nimport Input from '../../shared/components/FormElements/Input'\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\r\nimport Button from '../../shared/components/FormElements/Button'\r\nimport Card from '../../shared/components/UIelements/Card'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../shared/components/UIelements/LoadingSpinner'\r\nimport ErrorModal from '../../shared/components/UIelements/ErrorModal'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\n// const DUMMY_PLACES = [{\r\n//     id: 'r1',\r\n//     title: 'Maa Bhagwati Bhawan',\r\n//     description: 'Housing Complex',\r\n//     imageUrl: 'https://source.unsplash.com/C6oPXOatFD8',\r\n//     address: 'XXFF+445, Belaganj, Bihar 804403',\r\n//     location: {\r\n//         lat: 24.9727717,\r\n//         lng: 84.9706764\r\n//     },\r\n//     creator: 'rits'\r\n// },\r\n// {\r\n\r\n//     id: 'r2',\r\n//     title: 'Harsha Nilaya',\r\n//     description: 'Housing Complex',\r\n//     imageUrl: 'https://source.unsplash.com/C6oPXOatFD8',\r\n//     address: '3128, Harsha Nilaya, 4th Main, 3rd Cross Rd, 1st Stage, Kumaraswamy Layout, Bengaluru, Karnataka',\r\n//     location: {\r\n//         lat: 12.9100171,\r\n//         lng: 77.5612242\r\n//     },\r\n//     creator: 'raj'\r\n\r\n// }]\r\n\r\n\r\nconst UpdatePlace = () => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    // const [isLoading, setIsLoading] = useState(true)\r\n    const placeId = useParams().placeId\r\n    const history = useHistory();\r\n    // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId)\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n                setLoadedPlace(responseData.place);\r\n                setFormData({\r\n                    title: {\r\n                        value: responseData.place.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: responseData.place.description,\r\n                        isValid: true\r\n                    }\r\n                }, true\r\n                );\r\n            } catch (err) { }\r\n        }\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData])\r\n    // const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId)\r\n\r\n    // useEffect(() => {\r\n    //     if (identifiedPlace) {\r\n\r\n    //     }\r\n    //     setIsLoading(false)\r\n    // }, [setFormData, identifiedPlace]);\r\n\r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n                'PATCH',\r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value\r\n\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            history.push('/' + auth.userId + '/places');\r\n        } catch (err) { }\r\n        // console.log(formState.inputs)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className='center'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n\r\n            <div className='center'>\r\n                <Card>\r\n                    <h2> Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        // formState.inputs.title.value && (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && loadedPlace && (\r\n                <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n                    <Input\r\n                        id=\"title\"\r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please Enter a Valid Title\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.title}\r\n                        initialValid={true}\r\n                    />\r\n                    <Input\r\n                        id=\"description\"\r\n                        element=\"textarea\"\r\n                        // type=\"text\"\r\n                        label=\"Description\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please Enter a Valid Description (at least of 5 characters)\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.description}\r\n                        initialValid={true}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        UPDATE PLACE\r\n                    </Button>\r\n                </form>\r\n            )\r\n            }\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdatePlace","import React, { useReducer, useEffect } from 'react'\r\n\r\nimport { validate } from '../../util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    // const [enteredValue, setEnteredValue] = useState('')\r\n    // const [isValid, setIsValid] = useState('false')\r\n\r\n    const changeHandler = event => {\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} />\r\n    )\r\n\r\n\r\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}> {props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n}\r\n\r\nexport default Input","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className={`card ${props.className}`} style={props.style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true\r\n            for (const inputId in state.inputs) {\r\n\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    })\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        })\r\n    }, [])\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, [])\r\n\r\n    return [formState, inputHandler, setFormData]\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchPlace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","sent","place","t0","stop","apply","arguments","placeUpdateSubmitHandler","_ref2","_callee2","event","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","_x","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","inputReducer","state","action","_objectSpread","val","validate","isTouched","props","_useReducer","useReducer","_useReducer2","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}